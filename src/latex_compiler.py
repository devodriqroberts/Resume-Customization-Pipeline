import os
import subprocess
import shutil

def compile_latex_to_pdf(latex_file_path):
    """Compile the LaTeX file to a PDF using pdflatex in the same directory."""
    try:
        # Get the directory of the .tex file
        output_directory = os.path.dirname(latex_file_path)
        
        # Change to the output directory for compiling
        original_cwd = os.getcwd()  # Store the original directory
        os.chdir(output_directory)  # Change to the .tex file's directory
        
        # Run pdflatex command to compile the .tex file
        subprocess.run(
            ["pdflatex", latex_file_path],
            check=True
        )
        
        # Return to the original directory
        os.chdir(original_cwd)
        
        print(f"PDF compiled successfully in: {output_directory}")
        
        # Move auxiliary files to a separate folder
        move_auxiliary_files(output_directory)
        
    except subprocess.CalledProcessError as e:
        print(f"Error occurred during PDF compilation: {e}")

def move_auxiliary_files(output_directory):
    """Move auxiliary files generated by pdflatex to a separate folder."""
    # Create a folder to store auxiliary files
    aux_folder = os.path.join(output_directory, "aux_files")
    os.makedirs(aux_folder, exist_ok=True)
    
    # Define auxiliary file extensions
    aux_extensions = [".aux", ".log", ".out", ".toc", ".synctex.gz", "fls"]
    
    # Move each auxiliary file to the aux_files folder
    for filename in os.listdir(output_directory):
        file_path = os.path.join(output_directory, filename)
        file_ext = os.path.splitext(filename)[1]
        
        # If the file has an auxiliary extension, move it
        if file_ext in aux_extensions:
            shutil.move(file_path, os.path.join(aux_folder, filename))
            print(f"Moved {filename} to {aux_folder}")